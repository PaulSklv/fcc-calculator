{"version":3,"sources":["components/Display.js","components/Button.js","actions/index.js","components/NumPad.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","currentValue","calculations","props","id","Button","onKeyDown","e","keyCode","valueObj","keyValue","calculation","value","document","addEventListener","this","removeEventListener","val","className","isNaN","onClick","React","Component","result","type","payload","firstRow","label","secondRow","thirdRow","fourthRow","fifthRow","NumPad","renderRow","row","map","button","key","App","isFloat","n","originalState","evaluated","endsWithOperators","operatorsRegExp","combineReducers","action","prevValue","arr","split","test","length","splice","join","evaluate","Math","floor","toString","includes","ReactDOM","render","store","createStore","reducers","querySelector"],"mappings":"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","file":"static/js/main.3737a8d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div id='display'>\r\n      {props.currentValue}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    currentValue: state.calculations.currentValue\r\n };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Display);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { calculation } from '../actions';\r\n\r\nconst isOperator = val => {\r\n  return !isNaN(val) || val === \".\" || val === \"=\";\r\n}\r\n\r\n\r\nclass Button extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if(e.keyCode == this.props.valueObj.keyValue) {\r\n      this.props.calculation(this.props.value, this.props.currentValue)\r\n    }\r\n  }\r\n    render() {\r\n      const {value, id, currentValue } = this.props;\r\n      return (\r\n        <div className=\"button-wrapper\">\r\n          <div className={`num-button ${isOperator(value) ? null : \"operator\" }`} id={id}\r\n                  onClick={() => this.props.calculation(value, currentValue)}>{value}</div>\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentValue: state.calculations.currentValue\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { calculation })(Button);\r\n","import _ from \"lodash\";\r\n\r\nconst isOperator = val => {\r\n  return !isNaN(val) || val === \"=\" || val === \"AC\" || val === '.' ;\r\n}\r\n\r\n\r\nexport const calculation = (value, currentValue, result) => {\r\n  if(!isOperator(value)) {\r\n    return {\r\n      type: \"HANDLE_OPERATOR\",\r\n      payload: {\r\n        currentValue: currentValue,\r\n        value: value\r\n      }\r\n    }\r\n  }\r\n  else if(value === \"=\") {\r\n    return {\r\n      type: \"EVALUATION\",\r\n      payload: {\r\n        currentValue: currentValue,\r\n        result: result,\r\n        value: value\r\n      }\r\n    }\r\n  }\r\n  else if(value === \"AC\") {\r\n    return {\r\n      type: \"ALL_CLEAR\"\r\n    }\r\n  }\r\n  else if(value === \".\") {\r\n    return {\r\n      type: \"DECIMAL\",\r\n      payload: value\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      type: \"HANDLE_NUMBERS\",\r\n      payload: currentValue === \"0\" ? currentValue = value : currentValue + value\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearDisplay = () => {\r\n  return {\r\n    type: \"ALL_CLEAR\"\r\n  };\r\n};\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst firstRow = [\r\n  {\r\n    id: 'clear',\r\n    label: 'AC'\r\n  }\r\n]\r\n\r\nconst secondRow = [\r\n  {\r\n    id: 'one',\r\n    label: '1',\r\n    keyValue: '97'\r\n  },\r\n  {\r\n    id: 'two',\r\n    label: '2',\r\n    keyValue: '98'\r\n  },\r\n  {\r\n    id: 'three',\r\n    label: '3',\r\n    keyValue: '99'\r\n  },\r\n  {\r\n    id: 'add',\r\n    label: '+',\r\n    keyValue: '107'\r\n  } \r\n]\r\n\r\nconst thirdRow = [\r\n  {\r\n    id: 'four',\r\n    label: '4',\r\n    keyValue: '100'\r\n  },\r\n  {\r\n    id: 'five',\r\n    label: '5',\r\n    keyValue: '101'\r\n  },\r\n  {\r\n    id: 'six',\r\n    label: '6',\r\n    keyValue: '102'\r\n  },\r\n  {\r\n    id: 'subtract',\r\n    label: '-',\r\n    keyValue: '109'\r\n  }\r\n]\r\n\r\nconst fourthRow = [\r\n  {\r\n    id: 'seven',\r\n    label: '7',\r\n    keyValue: '103'\r\n  },\r\n  {\r\n    id: 'eight',\r\n    label: '8',\r\n    keyValue: '104'\r\n  },\r\n  {\r\n    id: 'nine',\r\n    label: '9',\r\n    keyValue: '105'\r\n  },\r\n  {\r\n    id: 'multipy',\r\n    label: '*',\r\n    keyValue: '106'\r\n  }\r\n]\r\n\r\nconst fifthRow = [\r\n  {\r\n    id: 'equal',\r\n    label: '=',\r\n    keyValue: '13'\r\n  },\r\n  {\r\n    id: 'zero',\r\n    label: '0',\r\n    keyValue: '96'\r\n  },\r\n  {\r\n    id: 'decimal',\r\n    label: '.',\r\n    keyValue: '110'\r\n  },\r\n  {\r\n    id: 'divide',\r\n    label: '/',\r\n    keyValue: '111'\r\n  }\r\n]\r\n\r\nclass NumPad extends React.Component {\r\n\r\n  renderRow = row => {\r\n    return row.map(button => {\r\n      const { id, label, keyValue } = button;\r\n      return (\r\n        <Button id={id} value={label} key={id} valueObj={button}/>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className = \"wrapper\">\r\n      <div className = 'row'>\r\n        {this.renderRow(firstRow)}\r\n      </div>\r\n      <div className = 'row'>\r\n        {this.renderRow(secondRow)}\r\n      </div>\r\n      <div className = 'row'>\r\n        {this.renderRow(thirdRow)}\r\n      </div>\r\n      <div className = 'row'>\r\n        {this.renderRow(fourthRow)}\r\n      </div>\r\n      <div className = 'row'>\r\n        {this.renderRow(fifthRow)}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumPad;","import React from \"react\";\r\nimport Display from \"./Display\";\r\nimport NumPad from \"./NumPad\";\r\n\r\nconst App = () => {\r\n  return (\r\n  <div className='container'>\r\n    <div className='display'>\r\n      <Display />\r\n    </div>\r\n    <div className='num-pad'>\r\n      <NumPad />\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { evaluate } from \"mathjs\";\r\n\r\nconst isFloat = n => !!(n % 1);\r\n\r\nconst originalState = {\r\n  currentValue: \"0\",\r\n  evaluated: false\r\n}\r\n\r\nconst endsWithOperators = /(\\+|\\-|\\*|\\/|\\.)/;\r\nconst operatorsRegExp = /(\\+|\\-|\\*|\\/)/;\r\nconst calcReducer= (state = originalState, action) => {\r\n  switch(action.type) {\r\n    case 'HANDLE_NUMBERS':\r\n      return {\r\n        currentValue: action.payload,\r\n        prevValue: action.payload.calculation\r\n      }\r\n    case 'HANDLE_OPERATOR':\r\n      let { currentValue, value } = action.payload\r\n      var arr = currentValue.split(\"\");\r\n      if(state.evaluated) {\r\n        return {\r\n          currentValue: state.currentValue + value,\r\n          evaluated: false\r\n        }\r\n      }\r\n      if(endsWithOperators.test(arr[arr.length - 1])) {\r\n        if(arr[arr.length - 1] === value){\r\n          return {\r\n            currentValue: currentValue\r\n            }\r\n          } else if(!/(\\+|\\*|\\/)/.test((arr[arr.length - 2])) && value === '-'){\r\n            return {\r\n              currentValue: action.payload.currentValue + action.payload.value\r\n            }\r\n          } else if(/(\\+|\\*|\\/)/.test((arr[arr.length - 2])) && arr[arr.length - 1] === '-') {\r\n            arr.splice(arr.length - 2, 2, value);\r\n            return {\r\n              currentValue: arr.join(\"\")\r\n            }\r\n          } else {\r\n            arr[arr.length - 1] = value;\r\n            return {\r\n              currentValue: arr.join(\"\")\r\n            }\r\n          }\r\n        } else {\r\n          return {\r\n            currentValue: currentValue + value\r\n          }\r\n        }\r\n    case 'ALL_CLEAR':\r\n      return {\r\n        currentValue: \"0\",\r\n        evaluated: false\r\n      }\r\n    case 'EVALUATION':\r\n\r\n      return {\r\n        currentValue: isFloat(evaluate(action.payload.currentValue)) ? \r\n        (Math.floor(evaluate(action.payload.currentValue) * 100000) / 100000).toString() \r\n        : evaluate(action.payload.currentValue).toString(),\r\n        evaluated: true\r\n      }\r\n    case \"DECIMAL\": \r\n      if(!state.currentValue.includes('.')) {\r\n        return {\r\n          currentValue: state.currentValue + action.payload\r\n        }\r\n      } else if (state.currentValue.includes('.') && operatorsRegExp.test(state.currentValue) && /\\d$/.test(state.currentValue)) {\r\n        return {\r\n          currentValue: state.currentValue + action.payload\r\n        }\r\n      } else {\r\n          return {\r\n            currentValue: state.currentValue\r\n          }\r\n        }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default combineReducers({\r\n  calculations: calcReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}